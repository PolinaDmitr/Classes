# На вход алгоритма подаётся натуральное число N.
# Алгоритм строит по нему новое число R следующим образом.
# 1. Строится запись числа N в системе счисления с основанием 12.
# 2. Далее эта запись обрабатывается по следующему правилу:
# а) если число N делится на 4, то слева к нему приписывается «2», а справа «64»;
# б) если число N на 4 не делится, то в конец числа дописывается его максимальная
# цифра в системе счисления с основанием 12.
# Полученная таким образом запись является двенадцатеричной записью искомого числа R.
# 3. Результат переводится в десятичную систему и выводится на экран.
# Например, для исходного числа 11 = B12 результатом является число BB12= 143,
# а для исходного числа 12 = 1012 это число 2106412 = 43276.
# Укажите минимальное число R, большее 1799, которое может быть получено
# с помощью описанного алгоритма. В ответе запишите это число в десятичной системе счисления.

from string import ascii_uppercase, digits

def convert_digit(n):
    alp = digits + ascii_uppercase
    result = ''
    while n > 0:
        result = alp[n % 12] + result
        n //= 12
    return result


def alg(n):
    n_12 = convert_digit(n)
    if n % 4 == 0:
        n_12 = '2' + n_12 + '64'
    else:
        n_12 = n_12 + max(n_12)
    return int(n_12, 12)


l = []
for n in range(1, 10000):
    r = alg(n)
    if r > 1799:
        l.append(r)
print(min(l))




